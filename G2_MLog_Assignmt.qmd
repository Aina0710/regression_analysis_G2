---
title: "Logistic Regression"
author: "Group 2"
format:
  html:
    toc: true
    toc-depth: 3
    theme:
      light: flatly 
    output-file: "MLog_G2"
---

# Group Members

1.  Abdul Mukmin Bin Mohamed Aminuddin
2.  Aina Syazwani Binti Aziz
3.  Mohd Khairi Safwan Bin Johari
4.  Mohd Khairul Hanan Bin Mohd Wajiah
5.  Muhammad Aminuddin Bin Che Hashim

# Introduction to dataset.

We will be using dataset from MPH study. This study is aimed to determine the factors associate with unfavorable outcome among Pulmonary Tuberculosis patients in Kelantan over 10 years.

# Research Question

What are the factors associated with unfavorable outcomes among Pulmonary Tuberculosis patients in Kelantan over 10 years?

# Dataset Description:

-   Umur(tahun): Age of cases in years
-   Gender: Gender of cases (Male, Female)
-   Smoking: Smoking status of cases (Yes= Smoker, No= Non-Smoker)
-   HIV status: HIV status of cases(Positive, Negative, Not Done)
-   CXR: CXR result (No lesion, Minimal, Moderately Advanced, Far Advanced)
-   MDR status: Yes, No
-   DOTs: Method of DOTs (Healthcare Worker, Family Members)
-   Outcomes: Unfavourable, Favourable

# Prepare environment / Load libraries

```{r}
library(readr)
library(tidyverse)
library(broom)
library(gtsummary)
library(gt)
library(caret)
library(janitor)
library(ResourceSelection)
library(corrplot)
library(dagitty)
library(cardx)
library(ggdag)
```

# Reading and importing dataset

You can also downlownd the data from this [link]https://github.com/Aina0710/regression_analysis_G2.git
```{r}
tb1 <- readxl::read_excel("For Analysis.xlsx")
view(tb1)
```

# Data Wrangling

## Cleaning variables name for easy analysis

```{r}
tb1 <-clean_names(tb1)
glimpse(tb1)
```

## Change character variables to factor

```{r}
tb1 <- tb1 %>% mutate(across(where(is.character), as_factor))
glimpse (tb1)
```

## Change variable 'umur_tahun' from factor to numerical

```{r}
tb1 <- tb1 %>% mutate(across(c(umur_tahun), as.numeric))
glimpse(tb1)
```

# Describe Data

## Table summary of dataset

```{r}
tb1 %>% tbl_summary( label = list( umur_tahun ~
"Umur"
, gender ~
"gender"
, smoking ~
"Smoking Status"
, cxr ~
"CXR at Diagnosis"
, hiv_status ~
"HIV Status"
, mdr_status ~
"MDR Status"
, do_ts ~
"DOTS Method"
, outcomes ~
"Pulmonary TB Outcomes"
), statistic = list( all_continuous() ~
"{mean} ({sd})"
) ) %>% bold_labels() %>% italicize_levels() %>% as_gt() %>% gt::tab_header( title =
"Characteristic of sample population"
)
```

## Table summary according to Pulmonary TB outcomes

```{r}
tab_outcome <- tb1 %>% 
  tbl_summary(
    by = outcomes,
    label = list(
      umur_tahun ~ "Umur",
      gender ~ "Gender",
      smoking ~ "Smoking Status",
      cxr ~ "CXR at Diagnosis",
      hiv_status ~ "HIV Status",
      mdr_status ~ "MDR Status",
      do_ts ~ "DOTS Method"
    ),
    statistic = list(
      all_continuous() ~ "{mean} ({sd})",
      all_categorical() ~ "{n} / {N} ({p}%)"
    ),
    digits = all_continuous() ~ 2
  ) %>%
  modify_caption("Characteristic (N = {N})")

tab_outcome %>%
  as_gt()
```

# Explore data

## Plots

Histogram for numerical variables and barplot for categorical variables

-   Numerical variables: Age
-   Categorical variables: Gender, smoking, cxr, hiv status,mdr status, dots, outcomes

### Numerical variables

```{r}
tb1 %>% 
  ggplot(aes(umur_tahun))+
  geom_histogram()+
  facet_grid(.~outcomes)
```

### Categorical variables

1.  Outcomes

```{r}
ggplot(tb1) +
  geom_bar(aes(outcomes)) +
  theme_bw()
```

2.  Gender

```{r}
tb1%>% 
  ggplot(aes(gender)) + 
  geom_bar() +
  facet_grid(. ~ outcomes)
```

3.  Smoking

```{r}
tb1%>% 
  ggplot(aes(smoking)) + 
  geom_bar() +
  facet_grid(. ~ outcomes)
```

4.  cxr

```{r}
tb1%>% 
  ggplot(aes(cxr)) + 
  geom_bar() +
  facet_grid(. ~ outcomes)
```

5.  hiv status

```{r}
tb1%>% 
  ggplot(aes(hiv_status)) + 
  geom_bar() +
  facet_grid(. ~ outcomes)
```

6.  mdr status

```{r}
tb1%>% 
  ggplot(aes(mdr_status)) + 
  geom_bar() +
  facet_grid(. ~ outcomes)
```

7.  DOTS

```{r}
tb1%>% 
  ggplot(aes(do_ts)) + 
  geom_bar() +
  facet_grid(. ~ outcomes)
```

# Confounder and mediator

## Causal diagram

we will create causal pathway to see the direct and indirect effect of variables/exposure towards the outcomes.

```{r}
library(dagitty)

tbdag <- dagitty("
dag {
  bb=\"-4.419,-3.677,6.635,3.425\"
  Age [pos=\"0.268,2.062\"]
  Smoking [pos=\"0.766,-2.573\"]
  TB_outcome [outcome,pos=\"5.381,-0.483\"]
  cxr [pos=\"2.561,2.101\"]
  dots_method [pos=\"-1.399,-2.171\"]
  gender [pos=\"-2.225,1.815\"]
  hiv_status [exposure,pos=\"-3.351,0.348\"]
  mdr_status [pos=\"3.259,-2.534\"]
  Age -> Smoking
  Age -> TB_outcome
  Smoking -> TB_outcome
  cxr -> Smoking
  cxr -> TB_outcome
  dots_method -> TB_outcome
  gender -> Smoking
  gender -> TB_outcome
  hiv_status -> Smoking
  hiv_status -> TB_outcome
  hiv_status -> dots_method
  hiv_status -> mdr_status
  mdr_status -> TB_outcome
}
")

plot(tbdag)


```

From the causal diagram, the exposure studied is HIV Status and the outcome of interest is TB_outcome.

We identified that variables HIV status, age, gender and CXR at diagnosis as confounders and dots_method, mdr_Status, smoking and as mediators.

# Estimate the Regression Parameters

Using simple binary logistic regression and multiple binary regression, we can estimate the regression parameters or the log odds in the dataset where the outcome follows binomial or bernoulli distribution.

## Simple Logistic Regression

Outcome : Unfavorable outcome of Pulmonary TB 

Based on literature review and expert consultation, these are potential risk factors for unfavorable outcome of Pulmonary TB in Kelantan over 10 years

Numerical: Age 
Categorical: HIV status, MDR status, DOTS method, smoking, CXR at diagnosis and gender

1.  Age

```{r}
slr.umur <- glm(outcomes ~ umur_tahun, family = binomial(link = 'logit'), 
                  data = tb1)
summary(slr.umur)
tidy(slr.umur, conf.int = TRUE)

```

2.  Gender

```{r}
slr.gender <- glm(outcomes ~ gender, family = binomial(link = 'logit'), 
                  data = tb1)
summary(slr.gender)
tidy(slr.gender, conf.int = TRUE)
```

3.  Smoking

```{r}
slr.smoking <- glm(outcomes ~ smoking, family = binomial(link = 'logit'), 
                  data = tb1)
summary(slr.smoking)
tidy(slr.smoking, conf.int = TRUE)

```

4.  CXR

```{r}
slr.cxr <- glm(outcomes ~ cxr, family = binomial(link = 'logit'), 
                  data = tb1)
summary(slr.cxr)
tidy(slr.cxr, conf.int = TRUE)

```

5.  HIV status

```{r}
slr.hiv <- glm(outcomes ~ hiv_status, family = binomial(link = 'logit'), 
                  data = tb1)
summary(slr.hiv)
tidy(slr.hiv, conf.int = TRUE)
```

6.  Dots

```{r}
slr.dots <- glm(outcomes ~ do_ts, family = binomial(link = 'logit'), 
                  data = tb1)
summary(slr.dots)
tidy(slr.dots, conf.int = TRUE)
```

7.  MDR status

```{r}
slr.mdr <- glm(outcomes ~ mdr_status, family = binomial(link = 'logit'), 
                  data = tb1)
summary(slr.mdr)
tidy(slr.mdr, conf.int = TRUE)
```

Here we use likelihood ratio test (LRT) to obtain P-values. We start with an intercept only model and then test each predictor one by one.

```{r}
slr.tbfull <- glm(outcomes ~ 1, data = tb1, family = binomial(link = "logit"))
add1(slr.tbfull,scope = ~ umur_tahun + smoking + cxr + gender + mdr_status + do_ts + hiv_status , test = "LRT")
```

```{r}
summary(slr.tbfull)
```

## All variables

This is univariable logistic regression table summary includes all the variable. This is useful if our aim is exploratory research.

```{r}
tbl_uvregression(
  data = tb1,
  method = glm,
  y = outcomes,
  include = c( smoking, gender, cxr, hiv_status, mdr_status, do_ts), # List variables to include
  method.args = list(family = binomial)
) %>%        
  bold_labels() %>%
  italicize_levels() %>%
  as_gt() %>%
  gt::tab_header(title = "Table 1. Simple Logistic Regression")
```

```{r}
tbl_uvregression(
  data = tb1,
  method = glm,
  y = outcomes,
  include = c(smoking, gender, cxr, hiv_status, mdr_status, do_ts), # List variables to include
  method.args = list(family = binomial),exponentiate = TRUE) %>%        
  bold_labels() %>%
  italicize_levels() %>%
  as_gt() %>%
  gt::tab_header(title = "Table 1. Simple Logistic Regression")

```

# Multiple Logistic Regression

## Model 1: Model without interaction

Outcome: Unfavourable outcome of Pulmonary Tuberculosis

According to literature review and based on causal diagram, these are the potential factors associated for unfavourable TB outcome

Numerical IV: age

Categorical IV : gender, HIV status and CXR

```{r}
mlr.tb <- glm(outcomes ~ cxr + hiv_status + gender + umur_tahun , family = binomial(link="logit"), data = tb1)
summary(mlr.tb)
```
Clearer result in a data frame format using tidy() function for log odds
```{r}
tidy(mlr.tb) #log odds
```

Converting log odds to odd ratio
```{r}
tidy(mlr.tb, exponentiate = TRUE) # odds ratio
```

Table summary for multiple binary logistic regression without interaction (log odds)
```{r}
tbl_regression(mlr.tb) %>%
  add_n(location = "level") %>%
  bold_labels()%>%
  italicize_levels()
```

Table summary for multiple binary logistic regression without interaction (odds ratio)
```{r}
tbl_regression(mlr.tb, exponentiate = TRUE) %>%
  add_n(location = "level") %>%
  bold_labels()%>%
  italicize_levels()
```

## Model 2: Model with interaction

Outcome: Unfavourable outcome of Pulmonary Tuberculosis

Numerical IV: age

Categorical IV : Smoking,gender, MDR status, DOTS_method, Hiv status and CXR

Interaction: Hiv status With cxr at diagnosis

```{r}
mlr.tb.int <- glm(outcomes ~ cxr + hiv_status + gender + umur_tahun + hiv_status:cxr, family = binomial(link="logit"), data = tb1)
summary(mlr.tb.int)
```
Clearer result in a data frame format using tidy() function for log odds
```{r}
tidy(mlr.tb.int)
```
Converting log odds to odd ratio
```{r}
tidy(mlr.tb.int, exponentiate = TRUE)
```

# Model Selection

Model 1 and Model 2, need to compare with anova test

```{r}
anova(mlr.tb, mlr.tb.int, test = 'Chisq')
```

From ANOVA the p-value (Pr(\>Chi)) is greater than the typical significance level of 0.05. This suggest there is no difference between the two models.

Hence, we choose multivariable model 1 (mlr.tb) as our preliminary Final Model for Logistic Regression due to model with the least variable is parsimonious model. Model 1 has the outcome (outcomes = favorable/unfavorable) and the exposure is Hiv status(hiv_status) along with other confounder (gender, age and CXR)

# Prediction

For prediction:

Predicted log odds

Now, our preliminary final model is (mlr.tb)

```{r}
final.model <- glm(outcomes ~ umur_tahun + gender + cxr + hiv_status, family = binomial, data = tb1)

```

To recall the log odds

```{r}
tidy(final.model, conf.int=TRUE)
```

To recall the odds

```{r}
tidy(final.model, exponentiate = TRUE, conf.int = TRUE)
```

## Predict the log odds

```{r}
log_odds_fm <- augment(final.model)
```

Using slice() function to see the snapshot of the data. We choose the first 10 patients.
```{r}
log_odds_fm %>%  slice(1:10)
```
## Predict the probabilities

```{r}
prob_fm <- augment(final.model, type.predict = "response")
prob_fm %>% slice(1:10)
```

# Model Checking

## Check overall fitness:

1.  Accuracy
2.  Sensitivity
3.  Specificity

```{r}
final.m.prob <- 
  augment(final.model, type.predict = 'response') %>%
  mutate(pred.class = factor(ifelse(.fitted > 0.5, 'Unfavorable', 'Favorable')))
```

```{r}
confusionMatrix(final.m.prob$outcomes, final.m.prob$pred.class)
```
The model has an overall accuracy of 79.84% (95% CI 77.52, 82.02), preliminary final model able to predict correctly 79.84% of the cases.

Sensitivity (True Positive Rate) is relatively high at 81.16%, indicating that the model is very good at capturing all positive cases.

Specificity (True Negative Rate) is low at 56.06%, indicating poor performance in correctly identifying negative cases.


# Linearity in logits

Numerical covariate should be checked for linearity in logits: umur_tahun
```{r}
library(mfp)
```


```{r}
lin.umur <- mfp(outcomes ~ fp(umur_tahun), family = binomial(link = 'logit'), data = tb1, verbose = T)
```
The transition from null model to the linear model indicates there is slight improvement in fit by adding the predictor variables. The final model deviance shows that the additional transformation by fractional polynomial only lead to a slight improvement in fit.

```{r}
summary(lin.umur)
```

The residual deviance is nearly identical to the null deviance, suggesting the inclusion of this variable does not explain much variation in the outcome.

# Checking Goodness of fit test

## Hosmer-Lemeshow test

```{r}
library(ResourceSelection)
```

````{r}
hl_test <- hoslem.test(final.model$y, fitted(final.model))
print(hl_test)

```
```{r}
library(generalhoslem)
logitgof(tb1$outcomes, fitted(final.model), g=10)
```

Since the p-value is greater than 0.05 in the Hosmer-Lemeshow test, the model is fit.

## Area under the Curve (ROC)

```{r}
library(pROC)
```

Setting the plot aspect ratio to square
```{r}
par(pty= "s")
```

```{r}
roc_curve <- roc(final.m.prob$outcomes, final.m.prob$.fitted,
                 plot = TRUE, legacy.axes = TRUE,
                 col ="black", lwd =4,
                 print.auc =TRUE, ci = TRUE, main ="ROC")
                 
```


```{r}
auc(roc_curve)
```

AUC-ROC is 67.5% (95% CI:63.6, 71.3), suggests that the model has moderate discriminatory power in distinguishing between positive and negative outcomes

Hence, all of above goodness of fit test shows that our model (final.model) has good fit.


# Diagnostic Plot

We can visualize any influential outliers from these diagnostic plots for final model.

```{r}
plot(final.model)
```

# Identify Influential outliers

First, we need to identify influentials outliers, and we will attempt to remove those outliers and reperform the goodness of fit test for the filtered data.

One of the method to remove outliers is by setting the threshold for Cook’s Distance deviations


We use augment () to generate the residuals  values.

```{r}
infl <- influence.measures(final.model)
```

```{r}
data2.pred.res <- augment(final.model)
data2.pred.res
```

Method : Standardized residuals
Keep standardized residuals between 2 and -2 (values above 2 or lower than −2 considered as influential observations)

```{r}
non.influen.obs <- data2.pred.res %>% filter(.std.resid < 2 & .std.resid > -2)
```

Re-run the Model with the non-influential observations (final model)
```{r}
final.model1 <- glm(outcomes ~ umur_tahun + gender + cxr + hiv_status , data = non.influen.obs, family = binomial)
summary(final.model1)
```

# Diagnoctic plot after removal of influential observation

```{r}
plot(final.model1)
```


# Presentation

```{r}
tbl_regression(final.model1) %>%
bold_labels() %>% italicize_levels() %>%
as_gt() %>%
gt::tab_header(title = "Multiple Logistic Regression Model",
subtitle = "Without Interaction")
```

```{r}
tbl_regression(final.model1, exponentiate = TRUE) %>%
bold_labels() %>%
italicize_levels() %>%
as_gt() %>%
gt::tab_header(title = "Multiple Logistic Regression Model",
subtitle = "Without Interaction")
```

Create regression table
```{r}
gt_table_multivariable <- 
  tbl_regression(final.model1, exponentiate = TRUE) %>%
  bold_labels() %>%
  italicize_levels() %>%
  as_gt() %>%
  gt::tab_header(
    title = "Multiple Logistic Regression Model",
    subtitle = "Without Interaction"
  ) %>%
  gt::tab_footnote(
    footnote = "Constant = -1.974267"
  ) %>%
  gt::tab_footnote(
    footnote = "No multicollinearity"
  ) %>%
  gt::tab_footnote(
    footnote = "Hosmer-Lemeshow test, p-value = 0.778"
  ) %>%
  gt::tab_footnote(
    footnote = "Area under Receiver Operating Characteristics (ROC) curve was 67.5%"
  )

# Print the gt table
gt_table_multivariable
```

# Model Equation

logit(p) = log(p/(1-p)) = β0 + β1(Moderate CXR) + β2(Far Advanced CXR) + β3(HIV positive) + β5(HIV Not done)

Model Equation Unfavorable outcomes = -1.97 + 0.68 (Moderate CXR) + 1.93 (Far Advanced CXR) + 1.85(HIV Positive) - 2.18(HIV Not Done)

# Interpretation

1. The CXR result and HIV status are significant predictor for unfacorable outcome of PTB

2. If patient has a moderately advance CXR, the log odds of an unfavorable outcome of PTB increase by 0.68 (95%CI 0.37, 0.99) compared to minimal lesion CXR when other variables adjusted.

3. If patient has a far advanced CXR, the log odds of unfavorable PTB outcome increase by 1.93 (95%CI 1.2, 2.7) compare to minimal lesion CXR when other variables adjusted.

4. Being HIV positive patient increase the log odds of unfavorable PTB outcome by 1.85 (95%CI 1.4, 2.3) compared to HIV negative when other variables adjusted.

5. If the HIV status is unknown (not done), the log odds of unfavorable PTb outcome decrease 2.18 (95%CI -5.1, -0.62) compared to HIV negative when other variables adjusted.

6. Patient with moderately advance CXR have 1.97 times higher odds of unfavourable PTB outcome compared to patient with minimal when other variables adjusted (95%CI 1.44, 2.69, p < 0.001).

7. Patient with far advanced CXR have 6.89 time higher odds of unfavorable PTB outcome compared to minimal CXR when other variables adjusted (95% CI 3.34, 14.2, p < 0.001).

8. HIV positive patient have 6.33 time higher odds of unfavorable PTB outcome compared to HIV negative patient when other variable adjusted (95%CI 4.19, 9.62, p <0.001).

9. Patient that have not done HIV test have the odd of 0.11 for unfavorable outcome compare to HIV negative patient when other variables adjusted (95%CI 0.01, 0.54, p = 0.033)

10. Age and gender are not statistically significant predictors for unfavorable PTB outcome after adjusted to other variables.




